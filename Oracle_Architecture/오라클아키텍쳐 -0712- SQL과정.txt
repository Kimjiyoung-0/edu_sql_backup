Offline Archived Redo Log Files
오라클 인스턴스에 장애가 발생하면 리두로그를 활용해서
복구할 수 있다.
그러나 리두 로그 파일을 이용한 북도 불완전 복구가
될수 있는데 잦은 로그스위치로 리두 로그 그룹 순환한 경우
맨 처음 리두 로그 파일을 덮어써서 불완전 복구가 될 수 
있다는 점이다.

이런 경우에 대비해서 리두 로그 파일을 별도의 디렉토리에 따로
저장해 놓는 방식을 아카이브 로그 모드(Archive Log Mode) 또는
아카이브 모드(Archive Mode)라고 한다.


Parameter file 
 : 오라클 서버가 운영하기 위해, 
Instance를 메모리에 할당해야하는데 
이를 위한 초기화 파라미터 가 필요하다.

대표적인 초기화 파라미터로 PFile과 SPFile 이 있다.
 8i 이전에는 SPfile은 없고 PFile 만 있었다. 
즉, 오라클 인스턴스(SGA+부가)를 생성하기 위해서는 인스턴스의 사이즈,
 향후 SQL문이 들어왔을때 물리 데이터 베이스로 부터 데이터를 끌어올리는
 버퍼의 크기 등등 인스턴스 설정파일이 필요한데 
그것이 파라미터파일(PFile)인 것이다.

Pfile init <>.ora
Spfile <SID>.ora
parameter 파일을 읽어야 인스턴스 를 띄울수있다.

컨트롤 파일에 관한 정보만 있다.
컨트롤파일을 보면 Datafile과 logfile을 열 수 있다.

둘의 차이
아스키냐 바이너리냐 
운영중에 DB를 셧다운 시키지 않고 
수정가능
/dbs/spfile

password 파일
일반적으로 사용자의 암호는 딕셔너리에 저장되어 있어서 
DB가 오프된 후에 조회함
DB shutdown --> DB startup 하려면 sysdba 로 로그인해야 하는데, 
암호가 있는 딕셔너리는 DB 오픈 후에나 가능

그럼 sysdba로 로그인 못하고,, DB 오픈도 못시키고..

그래서
오라클은 SYSDBA 암호를 따로 password file, 일반 파일에 저정해 둔다.
위치는 parameter file이 있는 디렉토리와 동일함 = $ORACLE_HOME/dbs에서 
orapwSID 파일이 바로 password 파일 = 암호파일

해시 함수

의사 난수 : input이 같으면 output이 같다
SQL값으로 해시를 만든다.
해시값

SQL의 실행 과정
Parse, Excute, Fetch

Parse 
Shared pool에서 동일한 SQL statment(plan)을 찾는다.
[PLAN에 동일한 SQL문이 있다면 굳이 검증할 필요가 없어서]

Syntax 체크를 통해 SQL statement를 검증한다.
[문장에 오류가 있는 지등]
테이블 및 컬럼 정보를 data dictionary에서 찾는다.
[문장에 오류가 없어서 사용자가 입력한 테이블명이 틀리거나 없을수도 있다.]
Parse를 위해 필요한 오브젝트에 lock을 건다
사용자의 권한을 확인한다.
[Data Dictonary Cache에서 테이블등의 정보를 확인해 권한확인]
실행계획을 수립한다.
Shared SQL area에 실행계획과 statement를 load한다.

Excute
실행에 필요한 정보 및 리소스를 확보한다
Buffer Cache에 해당 Block이 없으면, Datafile에서 읽어온다.
Fetch
결과(resultset)를 user에게 리턴한다.
결과 rows에 따라 하나이상의 fetch를 실행할 수 있다.

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

select문 실행과정(그림 참조)

클라이언트에서 SQL문 전송 
서버 프로세스에서 받는다

shared pool에 library cache에서
plan을 찾는다.
(만약 조인,order by시 PGA에 저장) 
plan을 찾는데, 있으면 그 plan을 따라가고(소프트 파싱),
없으면 새로운 plan 생성(하드 파싱)
Data Dictonary Cache에서 테이블등의 정보를 확인해 권한확인

그 다음  하드파싱을 했을시 
DB(Data file)에서 테이블, 인덱스 정보를 읽어와서 
Buffer cache에 올린다.
그런뒤 결과를 종합하여
유저 에게 리턴

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DML(insert, delete, update) 실행 과정
클라이언트에서 SQL문 전송
서버 프로세스에서 받는다.

shared pool에 library cache에서
plan을 찾는다.
(만약 조인,order by시 PGA에 저장) 
plan을 찾는데, 있으면 그 plan을 따라가고(소프트 파싱),
없으면 새로운 plan 생성(하드 파싱)
Data Dictonary Cache에서 테이블등의 정보를 확인해 권한확인

plan이 생성되면 
Datafiles에서 DB wirter가 Datafile를 읽어옴
그 다음 Buffer Cache에 올라온 데이타에 
변경된 데이타를 반영
이때 Before은 rollback segment에 
after는 Buffer Cache의 데이터 블럭에
Before after 둘다는 Redo log file에 저장된다.
또한, 사용자가 커밋을 안해도 
오라클은 커밋을 가정하고, 돌아가는 알고리즘으로인해(빠른 커밋) 
일정시간 마다, 또는 Redo log Buffer Cache가 33퍼가 채워졌을 때 등
Redo log file이 Log Writer에 의해 
Log file에 저장됨.

Buffer Cache에 있는 데이터는 그 크기가 커
알고리즘에 따라 
일정시간 마다, 또는 Buffer Cache에 공간이 필요한데 데이터블록이
Dirty(log는 기록됬지만 Buffer에 남아있는 Data)일때
DBWriter에 의해 Data files에 기록됨

만약 이때 서버가 다운되어 
데이터가 날아갔을시,
Check point를 기준으로 Redo log files를 읽어서 복구

log file에 반영되면 그때 유저한테 결과 리턴

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
DDL(drop, create, Alter) 실행 과정
클라이언트에서 SQL문 전송
서버 프로세스에서 받는다.

DDL은 무조건 하드 파싱으로 진행된다.
(만약 조인,order by시 PGA에 저장)
Data Dictionary Cache에서 테이블등의 정보를 확인해 권한확인

plan이 생성되면 
Datafiles에서 DB wirter가 Datafile를 읽어옴
그 다음 Buffer Cache에 올라온 데이타에 
변경된 데이타를 반영
이때 Before은 rollback segment에 
after는 Buffer Cache의 데이터 블럭에
Before after 둘다는 Redo log file에 저장된다.
또한, 사용자가 커밋을 안해도 
오라클은 커밋을 가정하고, 돌아가는 알고리즘으로인해(빠른 커밋) 
일정시간 마다, 또는 Redo log Buffer Cache가 33퍼가 채워졌을 때 등
Redo log file이 Log Writer에 의해 
Log file에 저장됨.

Buffer Cache에 있는 데이터는 그 크기가 커
알고리즘에 따라 
일정시간 마다, 또는 Buffer Cache에 공간이 필요한데 데이터블록이
Dirty(log는 기록됬지만 Buffer에 남아있는 Data)일때
DBWriter에 의해 Data files에 기록됨

만약 이때 서버가 다운되어 
데이터가 날아갔을시,
Check point를 기준으로 Redo log files를 읽어서 복구

log file에 반영되면 그때 유저한테 결과 리턴
또한 DDL은 실행되면, 묵시적인 commit이 일어난다.(무조건)

DDL이 커밋되면 Dictionary Cache의 테이블 정보,
Data file등이 DDL에 맞춰서 알고리즘(옵티마이저가)알아서 갱신한다.

log에 기록되면 결과를 유저한테 리턴한다.

user 
(client)
V

Sever   
(PGA) 
V 	

SGA(shared pool [library buffer, Dictionary buffer], Buffer Cache, Redo log buffer),
background process(pmon[프로세스 관리자], smon[복구 담당], DBWR[Datafile을 읽어 Buffer Cache에 올림], CKPT[체크포인트 이벤트 발생], LGWR[로그라이터])
V
 files
(Control[SCN등이 저장됨,데이터베이스에 대한 정보],Data[System,Sysaux,Undo,Temp,Users],Log[Log])
 


